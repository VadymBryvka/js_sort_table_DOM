{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCAA,I,EAAM,EAAW,SAAS,aAAa,CAAC,SAClC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EACD,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAGtD,EAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IACI,EADE,EAAS,EAAE,MAAM,CAGjB,EAAY,SAAS,aAAa,CAAC,SAEnC,EAAO,EAAgB,GAAG,CAAC,SAAC,CAAlC,EACE,IAAI,EAEJ,OAAQ,EAAO,WAAW,EACxB,IAAK,OACH,EAAQ,EAAS,QAAQ,CAAC,EAAE,CAAC,WAAW,CACxC,KACF,KAAK,WACH,EAAQ,EAAS,QAAQ,CAAC,EAAE,CAAC,WAAW,CACxC,KACF,KAAK,MACH,EAAQ,EAAS,QAAQ,CAAC,EAAE,CAAC,WAAW,CACxC,KACF,KAAK,SACH,EAAQ,OAAO,EAAS,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,QAAS,IAErE,CAEA,MAAO,CACL,gBAAiB,EACjB,KAAM,CACR,CACF,GAEA,OAAQ,EAAO,WAAW,EACxB,IAAK,OAsBP,AArB4B,EAqBvB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,C,GArB3C,EAAwB,EACxB,KACF,KAAK,WAyBP,AAxBgC,EAwB3B,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,C,GAxB3C,EAA4B,EAC5B,KACF,KAAK,MA4BP,AA3B2B,EA2BtB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,IAAI,CAAG,EAAE,IAAI,A,GA3B/B,EAAuB,EACvB,KACF,KAAK,SA+BP,AA9B8B,EA8BzB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,IAAI,CAAG,EAAE,IAAI,A,GA9B/B,EAA0B,CAE9B,CAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAU,WAAW,CAAC,EAAS,eAAe,CAChD,GAEA,EAAO,GAAG,CAAC,SAAC,CAAZ,EAAyB,OAAA,EAAS,eAAe,A,EACnD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listHead = document.querySelector(\"thead\");\nvar actualyEmplList = _to_consumable_array(document.querySelector(\"tbody\").querySelectorAll(\"tr\"));\nlistHead.addEventListener(\"click\", function(e) {\n    var target = e.target;\n    var result;\n    var ulElement = document.querySelector(\"tbody\");\n    var list = actualyEmplList.map(function(employee) {\n        var namee;\n        switch(target.textContent){\n            case \"Name\":\n                namee = employee.children[0].textContent;\n                break;\n            case \"Position\":\n                namee = employee.children[1].textContent;\n                break;\n            case \"Age\":\n                namee = employee.children[2].textContent;\n                break;\n            case \"Salary\":\n                namee = Number(employee.children[3].textContent.replace(/\\$|,/g, \"\"));\n                break;\n        }\n        return {\n            employeeElement: employee,\n            name: namee\n        };\n    });\n    switch(target.textContent){\n        case \"Name\":\n            result = sortListbyName(list);\n            break;\n        case \"Position\":\n            result = sortListbyPosition(list);\n            break;\n        case \"Age\":\n            result = sortListbyAge(list);\n            break;\n        case \"Salary\":\n            result = sortListbySalary(list);\n            break;\n    }\n    list.forEach(function(employee) {\n        ulElement.appendChild(employee.employeeElement);\n    });\n    result.map(function(employee) {\n        return employee.employeeElement;\n    });\n});\nfunction sortListbyName(list) {\n    list.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n    });\n    return list;\n}\nfunction sortListbyPosition(list) {\n    list.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n    });\n    return list;\n}\nfunction sortListbyAge(list) {\n    list.sort(function(a, b) {\n        return a.name - b.name;\n    });\n    return list;\n}\nfunction sortListbySalary(list) {\n    list.sort(function(a, b) {\n        return a.name - b.name;\n    });\n    return list;\n}\n\n//# sourceMappingURL=index.5ab1b134.js.map\n","const listHead = document.querySelector('thead');\nconst actualyEmplList = [\n  ...document.querySelector('tbody').querySelectorAll('tr'),\n];\n\nlistHead.addEventListener('click', (e) => {\n  const target = e.target;\n  let result;\n\n  const ulElement = document.querySelector('tbody');\n\n  const list = actualyEmplList.map((employee) => {\n    let namee;\n\n    switch (target.textContent) {\n      case 'Name':\n        namee = employee.children[0].textContent;\n        break;\n      case 'Position':\n        namee = employee.children[1].textContent;\n        break;\n      case 'Age':\n        namee = employee.children[2].textContent;\n        break;\n      case 'Salary':\n        namee = Number(employee.children[3].textContent.replace(/\\$|,/g, ''));\n        break;\n    }\n\n    return {\n      employeeElement: employee,\n      name: namee,\n    };\n  });\n\n  switch (target.textContent) {\n    case 'Name':\n      result = sortListbyName(list);\n      break;\n    case 'Position':\n      result = sortListbyPosition(list);\n      break;\n    case 'Age':\n      result = sortListbyAge(list);\n      break;\n    case 'Salary':\n      result = sortListbySalary(list);\n      break;\n  }\n\n  list.forEach((employee) => {\n    ulElement.appendChild(employee.employeeElement);\n  });\n\n  result.map((employee) => employee.employeeElement);\n});\n\nfunction sortListbyName(list) {\n  list.sort((a, b) => a.name.localeCompare(b.name));\n\n  return list;\n}\n\nfunction sortListbyPosition(list) {\n  list.sort((a, b) => a.name.localeCompare(b.name));\n\n  return list;\n}\n\nfunction sortListbyAge(list) {\n  list.sort((a, b) => a.name - b.name);\n\n  return list;\n}\n\nfunction sortListbySalary(list) {\n  list.sort((a, b) => a.name - b.name);\n\n  return list;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","listHead","document","querySelector","actualyEmplList","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addEventListener","e","result","target","ulElement","list","map","employee","namee","textContent","children","Number","replace","employeeElement","sort","a","b","localeCompare","forEach","appendChild"],"version":3,"file":"index.5ab1b134.js.map"}